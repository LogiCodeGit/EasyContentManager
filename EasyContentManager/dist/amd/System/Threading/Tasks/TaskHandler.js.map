{"version":3,"sources":["System/Threading/Tasks/TaskHandler.js","System/Threading/Tasks/TaskHandler.ts"],"names":["define","require","exports","TaskHandlerBase_1","ArgumentNullException_1","extends_1","__extends","TaskHandler","_super","_action","call","this","ArgumentNullException","prototype","_onExecute","_onDispose","TaskHandlerBase","Object","defineProperty","value"],"mappings":";;;;AAIAA,QAAQ,UAAW,UAAW,oBAAqB,yCAA0C,oBAAqB,SAAUC,EAASC,EAASC,EAAmBC,EAAyBC,GACtL,YCIJ,IAAMC,GAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAGC,QAAAD,GAAoBE,GAGnB,GADAD,EAAAE,KAAAC,MAFmBA,KAAAF,QAAAA,GAGfA,EAAS,KAAM,IAAIL,GAAAQ,sBAAsB,UAa/C,MAnBiCN,GAAAC,EAAAC,GAStBD,EAAAM,UAAAC,WAAV,WAECH,KAAKF,WAGIF,EAAAM,UAAAE,WAAV,WAECP,EAAAK,UAAME,WAAUL,KAAAC,MAChBA,KAAKF,QAAU,MAEjBF,GAnBiCJ,EAAAa,gBAApBd,GAAAK,YAAWA,EAqBxBU,OAAAC,eAAAhB,EAAA,cAAAiB,OAAA,IDNIjB,EAAAA,WCMWK","file":"System/Threading/Tasks/TaskHandler.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\ndefine([\"require\", \"exports\", \"./TaskHandlerBase\", \"../../Exceptions/ArgumentNullException\", \"../../../extends\"], function (require, exports, TaskHandlerBase_1, ArgumentNullException_1, extends_1) {\n    \"use strict\";\n    var __extends = extends_1.default;\n    var TaskHandler = (function (_super) {\n        __extends(TaskHandler, _super);\n        function TaskHandler(_action) {\n            _super.call(this);\n            this._action = _action;\n            if (!_action)\n                throw new ArgumentNullException_1.ArgumentNullException('action');\n        }\n        TaskHandler.prototype._onExecute = function () {\n            this._action();\n        };\n        TaskHandler.prototype._onDispose = function () {\n            _super.prototype._onDispose.call(this);\n            this._action = null;\n        };\n        return TaskHandler;\n    }(TaskHandlerBase_1.TaskHandlerBase));\n    exports.TaskHandler = TaskHandler;\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = TaskHandler;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {TaskHandlerBase} from \"./TaskHandlerBase\";\r\nimport {ArgumentNullException} from \"../../Exceptions/ArgumentNullException\";\r\nimport {Closure} from \"../../FunctionTypes\";\r\nimport __extendsImport from \"../../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nexport class TaskHandler extends TaskHandlerBase\r\n{\r\n\r\n\tconstructor(private _action:Closure)\r\n\t{\r\n\t\tsuper();\r\n\t\tif(!_action) throw new ArgumentNullException('action');\r\n\t}\r\n\r\n\tprotected _onExecute():void\r\n\t{\r\n\t\tthis._action();\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._action = null;\r\n\t}\r\n}\r\n\r\nexport default TaskHandler;"]}