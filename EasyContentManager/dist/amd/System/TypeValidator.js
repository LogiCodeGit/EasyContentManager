/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT
 */
define(["require","exports","./Types","./Compare","../extends"],function(e,r,t,n,i){"use strict";function s(e,r){if(!n.areEqual(e,r)){var t=new a(e);if(!t.contains(r))return!0}return!1}var u=i["default"],a=function(e){function r(r){var t=this;e.call(this,r,function(){return t._value=r})}return u(r,e),r.prototype.contains=function(e){var r=this._value;if(r===e)return!0;switch(e){case Function:return this.isFunction;case Object:return this.isObject;case Array:return this.isArray;case String:return this.isString;case Number:return this.isNumber;case Boolean:return this.isBoolean}if(this.type!=typeof e||this.isPrimitive&&!n.areEqual(r,e))return!1;if(this.isArray&&Array.isArray(e)){for(var t=Math.min(e.length,r.length),i=0;t>i;i++)if(s(r[i],e[i]))return!1;return!0}if(this.isObject){var u=Object.keys(r),a=Object.keys(e);if(a.length>u.length)return!1;for(var o=0,c=a;o<c.length;o++){var f=c[o];if(-1==u.indexOf(f))return!1}for(var h=0,l=a;h<l.length;h++){var f=l[h];if(s(r[f],e[f]))return!1}}return!0},r}(t.TypeInfo);r.TypeInfoHelper=a;var o=function(){function e(e){this._typeDescriptor=e,Object.freeze(this)}return e.prototype.isSubsetOf=function(e){var r=new a(e);return r.contains(this._typeDescriptor)},e}();r.TypeValidator=o,Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=o});
//# sourceMappingURL=TypeValidator.js.map
