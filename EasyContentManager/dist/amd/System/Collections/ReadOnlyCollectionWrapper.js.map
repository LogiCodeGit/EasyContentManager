{"version":3,"sources":["System/Collections/ReadOnlyCollectionWrapper.js","System/Collections/ReadOnlyCollectionWrapper.ts"],"names":["define","require","exports","ArgumentNullException_1","ReadOnlyCollectionBase_1","extends_1","__extends","ReadOnlyCollectionWrapper","_super","c","call","this","ArgumentNullException","_","_getCount","count","getEnumerator","ReadOnlyCollectionBase","Object","defineProperty","value"],"mappings":";;;;AAIAA,QAAQ,UAAW,UAAW,sCAAuC,2BAA4B,iBAAkB,SAAUC,EAASC,EAASC,EAAyBC,EAA0BC,GAC9L,YCIJ,IAAMC,GAAYD,EAAAA,WAElBE,EAAA,SAAAC,GAEC,QAAAD,GAAYE,GAIX,GAFAD,EAAAE,KAAAC,OAEIF,EACH,KAAM,IAAIN,GAAAS,sBAAsB,aAEjC,IAAIC,GAAIF,IACRE,GAAEC,UAAY,WAAI,MAAAL,GAAEM,OACpBF,EAAEG,cAAgB,WAAK,MAAAP,GAAEO,iBAE3B,MAb0DV,GAAAC,EAAAC,GAa1DD,GAb0DH,EAAAa,uBAA1DC,QAAAC,eAAAjB,EAAA,cAAAkB,OAAA,IDSIlB,EAAAA,WAAkBK","file":"System/Collections/ReadOnlyCollectionWrapper.js","sourcesContent":["/*!\n * @author electricessence / https://github.com/electricessence/\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\n */\ndefine([\"require\", \"exports\", \"../Exceptions/ArgumentNullException\", \"./ReadOnlyCollectionBase\", \"../../extends\"], function (require, exports, ArgumentNullException_1, ReadOnlyCollectionBase_1, extends_1) {\n    \"use strict\";\n    var __extends = extends_1.default;\n    var ReadOnlyCollectionWrapper = (function (_super) {\n        __extends(ReadOnlyCollectionWrapper, _super);\n        function ReadOnlyCollectionWrapper(c) {\n            _super.call(this);\n            if (!c)\n                throw new ArgumentNullException_1.ArgumentNullException('collection');\n            var _ = this;\n            _._getCount = function () { return c.count; };\n            _.getEnumerator = function () { return c.getEnumerator(); };\n        }\n        return ReadOnlyCollectionWrapper;\n    }(ReadOnlyCollectionBase_1.ReadOnlyCollectionBase));\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.default = ReadOnlyCollectionWrapper;\n});\n","/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {ArgumentNullException} from \"../Exceptions/ArgumentNullException\";\r\nimport {ReadOnlyCollectionBase} from \"./ReadOnlyCollectionBase\";\r\nimport {ICollection} from \"./ICollection\";\r\nimport __extendsImport from \"../../extends\";\r\nconst __extends = __extendsImport;\r\n\r\nexport default class ReadOnlyCollectionWrapper<T> extends ReadOnlyCollectionBase<T>\r\n{\r\n\tconstructor(c:ICollection<T>)\r\n\t{\r\n\t\tsuper();\r\n\r\n\t\tif(!c)\r\n\t\t\tthrow new ArgumentNullException('collection');\r\n\r\n\t\tvar _ = this;\r\n\t\t_._getCount = ()=>c.count;\r\n\t\t_.getEnumerator = ()=> c.getEnumerator();\r\n\t}\r\n}\r\n"]}