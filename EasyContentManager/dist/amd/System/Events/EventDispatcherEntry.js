/*!
 * @author electricessence / https://github.com/electricessence/
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 */
define(["require","exports","../Types","../Disposable/DisposableBase","../Exceptions/ArgumentNullException","../Exceptions/ArgumentException","../Compare","../../extends"],function(e,t,n,i,s,r,p,a){"use strict";var o=a["default"],l=function(e){function t(t,i,p,a){if(void 0===p&&(p=null),e.call(this,a),this.type=t,this.listener=i,this.params=p,!i)throw new s.ArgumentNullException("listener");if(n.Type.isObject(i)&&!n.Type.hasMemberOfType(i,"handleEvent",n.Type.FUNCTION))throw new r.ArgumentException("listener","is invalid type.  Must be a function or an object with 'handleEvent'.");var o=this;o.type=t,o.listener=i,o.params=p,o._disposableObjectName="EventDispatcherEntry"}return o(t,e),t.prototype._onDispose=function(){e.prototype._onDispose.call(this),this.listener=null},t.prototype.dispatch=function(e){var t=this;if(t.wasDisposed)return!1;var i=t.listener,s=i&&e.type==t.type;return s&&(n.Type.isFunction(i)?t.listener(e):i.handleEvent(e)),s},t.prototype.matches=function(e,t){var n=this;return n.type==e&&n.listener==t},t.prototype.equals=function(e){var t=this;return t.matches(e.type,e.listener)&&p.areEquivalent(t.params,e.params,!1)},t}(i.DisposableBase);t.EventDispatcherEntry=l,Object.defineProperty(t,"__esModule",{value:!0}),t["default"]=l});
//# sourceMappingURL=EventDispatcherEntry.js.map
